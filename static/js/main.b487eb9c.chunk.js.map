{"version":3,"sources":["logo.svg","components/Header.js","components/GlobalFilter.js","components/Pagination.js","components/TableBody.js","components/TableHead.js","components/Table.js","components/UberTable.js","components/Footer.js","App.js","index.js"],"names":["Header","className","style","fontSize","color","padding","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","useState","value","setValue","onChange","useAsyncDebounce","undefined","e","target","placeholder","Pagination","state","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","onClick","disabled","pageIndex","type","defaultValue","event","page","Number","width","height","pageSize","map","TableBody","getTableBodyProps","prepareRow","row","i","getRowProps","cells","cell","render","TableHead","headerGroups","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","Table","getTableProps","DasTable","columns","data","useTable","initialState","useGlobalFilter","useSortBy","usePagination","UberTable","React","useMemo","accessor","Cell","alt","src","Date","toLocaleDateString","employees","Footer","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b487eb9c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Header () {\n    return (\n        <div className=\"text-center bg-success\">\n            <h1 style={{ fontSize: 30, color: \"white\", padding: 19 }}>\n                Employee Manager\n            </h1>\n        </div>\n    )\n};\n\nexport default Header;","import { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useAsyncDebounce } from \"react-table\";\n\nfunction GlobalFilter({ preGlobalFilteredRows, globalFilter, setGlobalFilter}) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n    }, 200)\n\n    return (\n        <form>\n            Search:{' '} <input\n                className=\"mb-2 w-25\"\n                value={value || \"\"}\n                onChange={e => {\n                    setValue(e.target.value);\n                    onChange(e.target.value);\n                }}\n                placeholder={`${count} records...`}\n            />\n        </form>\n    )\n};\n\nexport default GlobalFilter;","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Pagination({\n    state,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize\n}) {\n\n    return(\n        <ul className=\"pagination\">\n            <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                <button className=\"page-link\">{'<<'}</button>\n            </li>\n            <li className=\"page-item\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                <button className=\"page-link\">{'<'}</button>\n            </li>\n            <li className=\"page-item\" onClick={() => nextPage()} disabled={!canNextPage}>\n                <button className=\"page-link\">{'>'}</button>\n            </li>\n            <li className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                <button className=\"page-link\">{'>>'}</button>\n            </li>\n            <li>\n                <button className=\"page-link\">\n                    Page{' '} {state.pageIndex + 1} of {pageOptions.length} {' '}\n                </button>\n            </li>\n            <li>\n                <button className=\"page-link\">\n                    <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        defaultValue={state.pageIndex + 1}\n                        onChange={event => {\n                            const page = event.target.value ? Number(event.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                        style={{ width: '100px', height: '20px' }}\n                    />\n                </button>\n            </li>{' '}\n            <select\n                className=\"form-control\"\n                value={state.pageSize}\n                onChange={event => {\n                    setPageSize(Number(event.target.value))\n                }}\n                style={{ width: '120px', height: '38px' }}\n            >\n                {[5, 10, 20, 30, 40, 50].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n            </select>\n        </ul>\n    )\n}\n\nexport default Pagination;","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction TableBody({\n    getTableBodyProps,\n    prepareRow,\n    page\n}) {\n    return (\n        <tbody {...getTableBodyProps()}>\n            {page.map((row, i) => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td>{cell.render('Cell')}</td>\n                        })}\n                    </tr>\n                )\n            })}\n        </tbody>\n    )\n};\n\nexport default TableBody;","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction TableHead({\n    headerGroups\n}) {\n    return (\n        <thead>\n            {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                            {column.render('Header')}\n                            <span>\n                                {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? ' 🔽'\n                                        : ' 🔼'\n                                    : ''\n                                }\n                            </span>\n                        </th>\n                    ))}\n                </tr>\n            ))}\n        </thead>\n    )\n};\n\nexport default TableHead;","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TableBody from \"../components/TableBody\";\nimport TableHead from \"../components/TableHead\";\n\nfunction Table({\n    getTableProps,\n    headerGroups,\n    getTableBodyProps,\n    prepareRow,\n    page\n}) {\n    return (\n        <table className=\"table\" {...getTableProps()}>\n            <TableHead\n                headerGroups={headerGroups}\n            />\n            <TableBody\n                getTableBodyProps={getTableBodyProps}\n                prepareRow={prepareRow}\n                page={page}\n            />\n        </table>\n    )\n};\n\nexport default Table;","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport employees from \"../utils/employees.json\";\nimport { useTable, useGlobalFilter, useSortBy, usePagination } from \"react-table\";\nimport GlobalFilter from \"../components/GlobalFilter\";\nimport Pagination from \"../components/Pagination\";\nimport Table from \"../components/Table\";\n\nfunction DasTable({ columns, data }) {\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        state,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: { pageIndex: 0, pageSize: 10 }\n        },\n        useGlobalFilter,\n        useSortBy,\n        usePagination\n    )\n\n    return (\n        <div>\n            <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n            />\n            <Table\n                getTableProps={getTableProps}\n                headerGroups={headerGroups}\n                getTableBodyProps={getTableBodyProps}\n                prepareRow={prepareRow}\n                page={page}\n            />\n            <Pagination\n                state={state}\n                canPreviousPage={canPreviousPage}\n                canNextPage={canNextPage}\n                pageOptions={pageOptions}\n                pageCount={pageCount}\n                gotoPage={gotoPage}\n                nextPage={nextPage}\n                previousPage={previousPage}\n                setPageSize={setPageSize}\n            />\n        </div>\n    )\n};\n\nfunction UberTable() {\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: \"\",\n                accessor: \"picture.thumbnail\",\n                Cell: (row) => {\n                    return <img alt=\"employee profile\" src={row.value}/>\n                }\n            },\n            {\n                Header: \"First\",\n                accessor: \"name.first\"\n            },\n            {\n                Header: \"Last\",\n                accessor: \"name.last\"\n            },\n            {\n                Header: \"DOB\",\n                accessor: \"dob.date\",\n                Cell: (row) => {\n                    return <div>{new Date(row.value).toLocaleDateString()}</div>\n                }\n            },\n            {\n                Header: \"City\",\n                accessor: \"location.city\"\n            },\n            {\n                Header: \"State\",\n                accessor: \"location.state\"\n            },\n            {\n                Header: \"Email\",\n                accessor: \"email\"\n            },\n            {\n                Header: \"Cell\",\n                accessor: \"cell\"\n            },\n        ],\n        []\n    );\n\n    const data = employees;\n\n    return (\n        <DasTable columns={columns} data={data} />\n    )\n};\n\nexport default UberTable;","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Footer () {\n    return (\n        <footer className=\"bg-success text-white text-center mt-4 p-3\">\n            <h4>&copy; Made with ❤️️ by Philip DiPaula</h4>\n        </footer>\n    )\n};\n\nexport default Footer;","import logo from './logo.svg';\nimport './App.css';\nimport Header from \"../src/components/Header\";\nimport UberTable from \"../src/components/UberTable\";\nimport Footer from \"../src/components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <UberTable />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n/* import reportWebVitals from './reportWebVitals'; */\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n/* reportWebVitals(); */\n"],"sourceRoot":""}